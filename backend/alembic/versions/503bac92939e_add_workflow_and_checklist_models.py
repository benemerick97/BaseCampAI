"""Add workflow and checklist models

Revision ID: 503bac92939e
Revises: 8ae72896e038
Create Date: 2025-07-15 03:33:29.633828

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '503bac92939e'
down_revision: Union[str, Sequence[str], None] = '8ae72896e038'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.create_table(
        'workflows',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('is_template', sa.Boolean(), nullable=False, default=False),
        sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.func.now()),
        sa.Column('organisation_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['organisation_id'], ['organisations.id']),
    )

    op.create_table(
        'step_groups',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('order', sa.Integer(), nullable=False),
        sa.Column('workflow_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id']),
    )

    op.create_table(
        'workflow_steps',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('workflow_id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=True),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('instructions', sa.String(), nullable=True),
        sa.Column('order', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id']),
        sa.ForeignKeyConstraint(['group_id'], ['step_groups.id']),
    )

    op.create_table(
        'input_fields',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('step_id', sa.Integer(), nullable=False),
        sa.Column('label', sa.String(), nullable=False),
        sa.Column('input_type', sa.String(), nullable=False),
        sa.Column('options', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('required', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['step_id'], ['workflow_steps.id']),
    )



def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('courses', 'slides',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False)
    op.create_table('input_fields',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('step_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('label', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('input_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('options', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('required', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['step_id'], ['workflow_steps.id'], name=op.f('input_fields_step_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('input_fields_pkey'))
    )
    op.create_table('step_groups',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('step_groups_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('workflow_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name='step_groups_workflow_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='step_groups_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('workflows',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('workflows_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_template', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('organisation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisations.id'], name='workflows_organisation_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='workflows_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_workflows_id'), 'workflows', ['id'], unique=False)
    op.create_table('workflow_steps',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('workflow_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('instructions', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['step_groups.id'], name=op.f('workflow_steps_group_id_fkey')),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name=op.f('workflow_steps_workflow_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('workflow_steps_pkey'))
    )
    # ### end Alembic commands ###
