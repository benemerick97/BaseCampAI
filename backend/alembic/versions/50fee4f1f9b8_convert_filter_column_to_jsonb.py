"""Convert filter column to JSONB

Revision ID: 50fee4f1f9b8
Revises: 6fb1facfc7a5
Create Date: 2025-06-22 05:14:16.402807

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '50fee4f1f9b8'
down_revision: Union[str, Sequence[str], None] = '6fb1facfc7a5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_assets_id'), table_name='assets')
    op.drop_table('assets')
    op.alter_column(
        'agents',
        'filter',
        existing_type=sa.TEXT(),
        type_=postgresql.JSONB(),
        existing_nullable=False,
        postgresql_using="filter::jsonb"  # âœ… THIS is critical
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('agents', 'filter',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=False,
               postgresql_using="filter::text"
            )
    op.create_table('assets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('asset_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('serial_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('site_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('organisation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisations.id'], name=op.f('assets_organisation_id_fkey')),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], name=op.f('assets_site_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('assets_pkey'))
    )
    op.create_index(op.f('ix_assets_id'), 'assets', ['id'], unique=False)
    # ### end Alembic commands ###
